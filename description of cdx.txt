Implement Express.js project with JWT authentication, PostgreSQL with Sequelize, role, permission and user, with the following roles: buyer, vendor, moderator, admin and banned. There are no emails, the login system works only with username, password. There is 2FA needed for every user to have it set up. Only vendors can create products to sell, digital or physical. Only buyers can buy products, leave 3 kinds of ratings (1 to 5 starts for each of them). Banned users can see just one page, nothing more. Every user can make a support ticket, admin and moderator can see them. Admin has access to the dashboard in which the percentage of the transactions is defined/changed, the ability to ban Transactions are done through Monero, in which I serve as a middleman. Moderator has just the ability to answer the support tickets, delete products, ban users. There should also be scam reports. They can be opened after 30 days, if the seller has not received the product, he can open a scam report, moderator and admin can see and respond to that scam report. Vendor can also see it and respond as well. Middleman will decide which user is right and which user is wrong and decide which of them how much money gets according to the policy of the seller. The buyer sends the monero coins initially to me, and the vendor gets notified and sends the item. Digital items are sent immediately and the transactions are made immediately. For physical transactions, if buyer doesn't respond for 30 days after the order, the order gets automatically finalized and the seller gets the money from middleman, the percentage is left at the wallet. The website is served from the backend with the EJS templating engine. The dashboard uses a different layout.
